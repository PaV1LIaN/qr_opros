<?php
namespace PortalHub;

use Bitrix\Main\Loader;

class Manager
{
    /** Получить ID инфоблока portal_sites */
    public static function getPortalIblockId(): int
    {
        if (!Loader::includeModule('iblock')) {
            return 0;
        }
        $res = \CIBlock::GetList([], ['=CODE' => 'portal_sites'], true);
        if ($ib = $res->Fetch()) {
            return (int)$ib['ID'];
        }
        return 0;
    }

    /** Привести код сайта к безопасному виду */
    public static function sanitizeCode(string $code): string
    {
        $code = mb_strtolower($code);
        $code = preg_replace('~\s+~u', '-', $code);
        $code = preg_replace('~[^a-z0-9\-_]~u', '', $code);
        return trim($code, '-_') ?: 'site';
    }

    /** Создание сайта + 2 группы пользователей */
    public static function createPortalSite(string $siteTitle, string $siteCode, string $roleName, array $admins = [], array $users = []): array
    {
        if (!Loader::includeModule('iblock')) {
            return ["success" => false, "message" => "Модуль инфоблоков не найден"];
        }

        $IBLOCK_ID = self::getPortalIblockId();
        if ($IBLOCK_ID <= 0) {
            return ["success" => false, "message" => "Инфоблок 'portal_sites' не найден"];
        }

        $siteTitle = trim($siteTitle);
        $siteCode  = self::sanitizeCode(trim($siteCode));
        $roleName  = trim($roleName);

        if ($siteTitle === "" || $siteCode === "" || $roleName === "") {
            return ["success" => false, "message" => "Название, код и роль обязательны"];
        }

        // Проверяем дубликаты
        $exists = \CIBlockElement::GetList([], [
            "IBLOCK_ID" => $IBLOCK_ID,
            [
                "LOGIC" => "OR",
                ["=NAME" => $siteTitle],
                ["=CODE" => $siteCode],
            ]
        ])->Fetch();
        if ($exists) {
            return ["success" => false, "status" => "exists", "message" => "Сайт с таким названием или кодом уже существует"];
        }

        // Создаём две группы
        $g = new \CGroup;
        $adminRoleId = $g->Add([
            "ACTIVE" => "Y",
            "C_SORT" => 100,
            "NAME" => $roleName . " (Администраторы)",
            "STRING_ID" => "portal_role_" . $siteCode
        ]);

        $g2 = new \CGroup;
        $userRoleId = $g2->Add([
            "ACTIVE" => "Y",
            "C_SORT" => 200,
            "NAME" => $roleName . " (Пользователи)",
            "STRING_ID" => "portal_user_" . $siteCode
        ]);

        if (!$adminRoleId || !$userRoleId) {
            return ["success" => false, "message" => "Не удалось создать группы пользователей"];
        }

        // Добавляем администраторов
        foreach ($admins as $uid) {
            $uid = (int)$uid;
            if ($uid > 0) {
                $groups = (array)\CUser::GetUserGroup($uid);
                if (!in_array($adminRoleId, $groups, true)) {
                    $groups[] = $adminRoleId;
                    \CUser::SetUserGroup($uid, $groups);
                }
            }
        }

        // Добавляем обычных пользователей
        foreach ($users as $uid) {
            $uid = (int)$uid;
            if ($uid > 0) {
                $groups = (array)\CUser::GetUserGroup($uid);
                if (!in_array($userRoleId, $groups, true)) {
                    $groups[] = $userRoleId;
                    \CUser::SetUserGroup($uid, $groups);
                }
            }
        }

        // Создаём элемент инфоблока
        $el = new \CIBlockElement;
        $id = $el->Add([
            "IBLOCK_ID" => $IBLOCK_ID,
            "ACTIVE" => "Y",
            "NAME" => $siteTitle,
            "CODE" => $siteCode,
            "PROPERTY_VALUES" => [
                "SITE_ROLE" => $adminRoleId,
                "SITE_USER_ROLE" => $userRoleId,
            ],
        ]);

        if (!$id) {
            return ["success" => false, "message" => "Ошибка при создании сайта: ".$el->LAST_ERROR];
        }

        return ["success" => true, "id" => (int)$id];
    }

    /** Получить сайты, доступные пользователю */
    public static function getPortalSites(array $userGroups): array
    {
        if (!Loader::includeModule('iblock')) {
            return [];
        }

        $IBLOCK_ID = self::getPortalIblockId();
        if ($IBLOCK_ID <= 0) {
            return [];
        }

        global $USER;
        $isAdmin = $USER->IsAdmin();

        $filter = ["IBLOCK_ID" => $IBLOCK_ID, "ACTIVE" => "Y"];
        if (!$isAdmin) {
            $ug = array_map('intval', $userGroups);
            $filter[] = [
                "LOGIC" => "OR",
                ["PROPERTY_SITE_ROLE" => $ug],
                ["PROPERTY_SITE_USER_ROLE" => $ug],
                ["PROPERTY_SITE_ROLE" => false],
            ];
        }

        $sites = [];
        $res = \CIBlockElement::GetList(["NAME" => "ASC"], $filter, false, false, ["ID","NAME","CODE","PROPERTY_SITE_ROLE","PROPERTY_SITE_USER_ROLE"]);
        while ($r = $res->Fetch()) {
            $sites[] = $r;
        }
        return $sites;
    }
}
