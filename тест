<?php
namespace PortalHub;

use Bitrix\Main\Loader;

/**
 * –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Ä—Ç–∞–ª–∞–º–∏
 */
class Manager
{
    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç ID –∏–Ω—Ñ–æ–±–ª–æ–∫–∞ "portal_sites"
     */
    public static function getPortalIblockId(): int
    {
        if (!Loader::includeModule('iblock')) {
            return 0;
        }

        $res = \CIBlock::GetList([], ['CODE' => 'portal_sites', 'CHECK_PERMISSIONS' => 'N']);
        if ($ib = $res->Fetch()) {
            return (int)$ib['ID'];
        }

        return 0;
    }

    /**
     * –ü—Ä–∏–≤–æ–¥–∏—Ç –∫–æ–¥ —Å–∞–π—Ç–∞ –∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º—É –≤–∏–¥—É
     */
    public static function sanitizeCode(string $code): string
    {
        $code = mb_strtolower(trim($code));
        $code = preg_replace('/[^a-z0-9\-_]/', '-', $code);
        return mb_substr($code, 0, 60);
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ—Ä—Ç–∞–ª–∞
     *
     * @param string $siteTitle –ù–∞–∑–≤–∞–Ω–∏–µ —Å–∞–π—Ç–∞
     * @param string $siteCode –ö–æ–¥ —Å–∞–π—Ç–∞ (–ø–∞–ø–∫–∞)
     * @param string $roleName –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏
     * @param array $admins –ú–∞—Å—Å–∏–≤ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
     * @param array $users –ú–∞—Å—Å–∏–≤ ID –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
     */
    public static function createPortalSite(string $siteTitle, string $siteCode, string $roleName, array $admins = [], array $users = []): array
    {
        if (!Loader::includeModule('iblock')) {
            return ["success" => false, "message" => "–ú–æ–¥—É–ª—å –∏–Ω—Ñ–æ–±–ª–æ–∫–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω"];
        }

        $IBLOCK_ID = self::getPortalIblockId();
        if ($IBLOCK_ID <= 0) {
            return ["success" => false, "message" => "–ò–Ω—Ñ–æ–±–ª–æ–∫ portal_sites –Ω–µ –Ω–∞–π–¥–µ–Ω"];
        }

        $siteTitle = trim($siteTitle);
        $siteCode = self::sanitizeCode(trim($siteCode));
        $roleName = trim($roleName);

        if ($siteTitle === "" || $siteCode === "" || $roleName === "") {
            return ["success" => false, "message" => "–ù–∞–∑–≤–∞–Ω–∏–µ, –∫–æ–¥ –∏ —Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã"];
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥—É–±–ª–∏–∫–∞—Ç—ã
        $exists = \CIBlockElement::GetList(
            [],
            [
                "IBLOCK_ID" => $IBLOCK_ID,
                [
                    "LOGIC" => "OR",
                    ["=NAME" => $siteTitle],
                    ["=CODE" => $siteCode],
                ]
            ],
            false,
            false,
            ["ID"]
        )->Fetch();

        if ($exists) {
            return ["success" => false, "status" => "exists", "message" => "–°–∞–π—Ç —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∏–ª–∏ –∫–æ–¥–æ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"];
        }

        // –°–æ–∑–¥–∞—ë–º –≥—Ä—É–ø–ø—ã Bitrix
        $g = new \CGroup;
        $adminRoleId = $g->Add([
            "ACTIVE" => "Y",
            "C_SORT" => 100,
            "NAME" => $roleName . " (–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã)",
            "STRING_ID" => "portal_role_" . $siteCode,
            "DESCRIPTION" => "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –ø–æ—Ä—Ç–∞–ª–∞ " . $siteTitle,
        ]);

        $g2 = new \CGroup;
        $userRoleId = $g2->Add([
            "ACTIVE" => "Y",
            "C_SORT" => 200,
            "NAME" => $roleName . " (–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏)",
            "STRING_ID" => "portal_user_" . $siteCode,
            "DESCRIPTION" => "–û–±—ã—á–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ—Ä—Ç–∞–ª–∞ " . $siteTitle,
        ]);

        if (!$adminRoleId || !$userRoleId) {
            return ["success" => false, "message" => "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"];
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        foreach ($admins as $uid) {
            $uid = (int)$uid;
            if ($uid > 0) {
                $groups = (array)\CUser::GetUserGroup($uid);
                if (!in_array($adminRoleId, $groups, true)) {
                    $groups[] = $adminRoleId;
                    \CUser::SetUserGroup($uid, $groups);
                }
            }
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        foreach ($users as $uid) {
            $uid = (int)$uid;
            if ($uid > 0) {
                $groups = (array)\CUser::GetUserGroup($uid);
                if (!in_array($userRoleId, $groups, true)) {
                    $groups[] = $userRoleId;
                    \CUser::SetUserGroup($uid, $groups);
                }
            }
        }

        // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –∏–Ω—Ñ–æ–±–ª–æ–∫–∞
        $el = new \CIBlockElement;
        $id = $el->Add([
            "IBLOCK_ID" => $IBLOCK_ID,
            "ACTIVE" => "Y",
            "NAME" => $siteTitle,
            "CODE" => $siteCode,
            "PROPERTY_VALUES" => [
                "SITE_ROLE" => $adminRoleId,
                "SITE_USER_ROLE" => $userRoleId,
            ],
        ]);

        if (!$id) {
            return ["success" => false, "message" => "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–∞–π—Ç–∞: " . $el->LAST_ERROR];
        }

        // === –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ —Å–∞–π—Ç–∞ ===
        $siteDir = $_SERVER['DOCUMENT_ROOT'] . "/local/portal_hub/sites/" . $siteCode;
        if (!is_dir($siteDir)) {
            \Bitrix\Main\IO\Directory::createDirectory($siteDir);
        }

        $tpl = <<<PHP
<?php
require(\$_SERVER["DOCUMENT_ROOT"]."/bitrix/header.php");
\$APPLICATION->SetTitle("{$siteTitle}");
use PortalHub\\Manager as PH;
global \$USER;

\$IBLOCK_ID = PH::getPortalIblockId();
\$res = \\CIBlockElement::GetList([], ["IBLOCK_ID"=>\$IBLOCK_ID, "CODE"=>"{$siteCode}"], false, false, ["PROPERTY_SITE_ROLE","PROPERTY_SITE_USER_ROLE"]);
if (\$row = \$res->Fetch()) {
    \$adminId = (int)\$row["PROPERTY_SITE_ROLE_VALUE"];
    \$userId  = (int)\$row["PROPERTY_SITE_USER_ROLE_VALUE"];
}
\$groups = (array)\$USER->GetUserGroupArray();

if (in_array(\$adminId, \$groups)) {
    echo "<h2>üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø–æ—Ä—Ç–∞–ª–∞</h2><p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å–∞–π—Ç {$siteTitle}.</p>";
} elseif (in_array(\$userId, \$groups)) {
    echo "<h2>üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ—Ä—Ç–∞–ª–∞</h2><p>–£ –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–∞–π—Ç—É {$siteTitle}.</p>";
} else {
    echo "<h2>üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω</h2>";
}

require(\$_SERVER["DOCUMENT_ROOT"]."/bitrix/footer.php");
PHP;

        $file = $siteDir . "/index.php";
        if (!file_exists($file)) {
            file_put_contents($file, $tpl);
        }

        return ["success" => true, "id" => (int)$id];
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ—Ä—Ç–∞–ª–æ–≤, –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
     */
    public static function getPortalSites(array $userGroups): array
    {
        if (!Loader::includeModule('iblock')) {
            return [];
        }

        $IBLOCK_ID = self::getPortalIblockId();
        if ($IBLOCK_ID <= 0) {
            return [];
        }

        global $USER;
        $isAdmin = $USER->IsAdmin();

        $filter = ["IBLOCK_ID" => $IBLOCK_ID, "ACTIVE" => "Y"];

        // –î–ª—è –Ω–µ–∞–¥–º–∏–Ω–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Å–∞–π—Ç—ã, –∫ –∫–æ—Ç–æ—Ä—ã–º –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø
        if (!$isAdmin) {
            $ug = array_map('intval', $userGroups);
            $filter[] = [
                "LOGIC" => "OR",
                ["PROPERTY_SITE_ROLE" => $ug],
                ["PROPERTY_SITE_USER_ROLE" => $ug],
                ["PROPERTY_SITE_ROLE" => false],
            ];
        }

        $sites = [];
        $res = \CIBlockElement::GetList(
            ["NAME" => "ASC"],
            $filter,
            false,
            false,
            ["ID", "NAME", "CODE", "PROPERTY_SITE_ROLE", "PROPERTY_SITE_USER_ROLE"]
        );

        while ($ar = $res->Fetch()) {
            $sites[] = [
                "ID" => (int)$ar["ID"],
                "NAME" => $ar["NAME"],
                "CODE" => $ar["CODE"],
                "ROLE_ADMIN" => (int)$ar["PROPERTY_SITE_ROLE_VALUE"],
                "ROLE_USER" => (int)$ar["PROPERTY_SITE_USER_ROLE_VALUE"],
            ];
        }

        return $sites;
    }
}
