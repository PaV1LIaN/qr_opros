<?php
require($_SERVER["DOCUMENT_ROOT"] . "/bitrix/modules/main/include/prolog_before.php");

use Bitrix\Main\Loader;
use Bitrix\Main\Application;
use Bitrix\Main\UI\Extension;
use PortalHub\Manager as PH;

global $USER;

Extension::load("ui.entity-selector");

$request = Application::getInstance()->getContext()->getRequest();
Loader::includeModule("iblock");

require_once __DIR__ . "/lib/functions.php";

// --- Создание сайта ---
if (
    $USER->IsAdmin() &&
    $request->isPost() &&
    check_bitrix_sessid() &&
    $request->getPost("create_site") === "Y"
) {
    $siteTitle = trim($request->getPost("site_title"));
    $siteCode = trim($request->getPost("site_code"));
    $roleName = trim($request->getPost("role_name"));
    $roleUsers = (array)$request->getPost("role_users");

    $result = PH::createPortalSite($siteTitle, $siteCode, $roleName, $roleUsers);

    if ($result["success"]) {
        echo "<pre style='color:green'>" . htmlspecialcharsbx($result["message"]) . "</pre>";
    } else {
        echo "<pre style='color:red'>" . htmlspecialcharsbx($result["message"]) . "</pre>";
    }
}

// --- AJAX обновление роли ---
if (
    $USER->IsAdmin() &&
    $request->isPost() &&
    check_bitrix_sessid() &&
    $request->getPost("AJAX") === "UPDATE_ROLE"
) {
    $roleId = (int)$request->getPost("ROLE_ID");
    $roleUsers = (array)$request->getPost("ROLE_USERS");

    $currentUsers = [];
    $rs = \CGroup::GetGroupUser($roleId);
    while ($userId = $rs->Fetch()) {
        $currentUsers[] = (int)$userId["USER_ID"];
    }

    // Добавляем новых пользователей
    foreach ($roleUsers as $userId) {
        $userId = (int)$userId;
        if (!in_array($userId, $currentUsers, true)) {
            \CUser::SetUserGroup($userId, array_merge(\CUser::GetUserGroup($userId), [$roleId]));
        }
    }

    // Удаляем исключённых
    foreach ($currentUsers as $userId) {
        if (!in_array($userId, $roleUsers, true)) {
            $groups = array_diff(\CUser::GetUserGroup($userId), [$roleId]);
            \CUser::SetUserGroup($userId, $groups);
        }
    }

    $result = [];
    foreach ($roleUsers as $uid) {
        $rsUser = \CUser::GetByID((int)$uid);
        if ($arUser = $rsUser->Fetch()) {
            $result[] = $arUser["NAME"] . " " . $arUser["LAST_NAME"];
        }
    }

    header('Content-Type: application/json; charset=utf-8');
    echo json_encode([
        "status" => "success",
        "users" => $result,
    ]);
    die();
}

// --- Вывод списка сайтов ---
$userGroups = $USER->GetUserGroupArray();
$sites = PH::getPortalSites($userGroups);

// --- HTML часть ---
require __DIR__ . "/templates/form.php";
require __DIR__ . "/templates/list.php";
