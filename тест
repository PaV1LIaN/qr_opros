<?php
// --- Ранняя обработка AJAX без header.php ---
if (isset($_POST['AJAX']) && $_POST['AJAX'] === 'UPDATE_ROLE') {
    require($_SERVER["DOCUMENT_ROOT"] . "/bitrix/modules/main/include/prolog_before.php");
    global $USER;

    if ($USER->IsAdmin() && check_bitrix_sessid() && $_SERVER['REQUEST_METHOD'] === 'POST') {
        $roleId    = (int)($_POST['ROLE_ID'] ?? 0);
        $roleUsers = array_map('intval', (array)($_POST['ROLE_USERS'] ?? []));

        // Текущие участники роли
        $currentUsers = [];
        $by = "id"; $order = "asc";
        $rs = CUser::GetList($by, $order, ["GROUPS_ID" => [$roleId]], ["FIELDS" => ["ID"]]);
        while ($u = $rs->Fetch()) {
            $currentUsers[] = (int)$u["ID"];
        }

        // Кого добавить / убрать
        $toAdd    = array_diff($roleUsers, $currentUsers);
        $toRemove = array_diff($currentUsers, $roleUsers);

        foreach ($toAdd as $uid) {
            $uid = (int)$uid;
            $groups = array_map('intval', (array)CUser::GetUserGroup($uid));
            if (!in_array($roleId, $groups, true)) {
                $groups[] = $roleId;
                CUser::SetUserGroup($uid, $groups);
            }
        }

        foreach ($toRemove as $uid) {
            $uid = (int)$uid;
            $groups = array_map('intval', (array)CUser::GetUserGroup($uid));
            $groups = array_values(array_diff($groups, [$roleId]));
            CUser::SetUserGroup($uid, $groups);
        }

        // Имена для ответа
        $names = [];
        if (!empty($roleUsers)) {
            $ids = implode("|", array_map('intval', $roleUsers));
            $rsU = CUser::GetList($by, $order, ["ID" => $ids], ["FIELDS" => ["ID","NAME","LAST_NAME","LOGIN"]]);
            while ($u = $rsU->Fetch()) {
                $title = trim($u["NAME"]." ".$u["LAST_NAME"]);
                if ($title === "") { $title = $u["LOGIN"]; }
                $names[] = $title;
            }
        }

        header('Content-Type: application/json; charset=utf-8');
        echo json_encode(["status" => "success", "users" => $names], JSON_UNESCAPED_UNICODE);
        die();
    }

    // Недостаточно прав/сессии
    header('Content-Type: application/json; charset=utf-8');
    echo json_encode(["status" => "error"], JSON_UNESCAPED_UNICODE);
    die();
}

// --- Обычный рендер страницы с подключением UI-ассетов ---
require($_SERVER["DOCUMENT_ROOT"] . "/bitrix/header.php");

use Bitrix\Main\Loader;
use PortalHub\Manager as PH;

global $USER;

Loader::includeModule("iblock");
require_once __DIR__ . "/lib/functions.php";

// Обработка создания сайта (POST)
if (
    $USER->IsAdmin() &&
    $_SERVER['REQUEST_METHOD'] === 'POST' &&
    check_bitrix_sessid() &&
    ($_POST["create_site"] ?? "") === "Y"
) {
    $siteTitle = trim((string)($_POST["site_title"] ?? ""));
    $siteCode  = trim((string)($_POST["site_code"] ?? ""));
    $roleName  = trim((string)($_POST["role_name"] ?? ""));

    // Теперь пользователи приходят CSV-строкой из селектора
    $roleUsersRaw = trim((string)($_POST["role_users"] ?? ""));
    $roleUsers = $roleUsersRaw !== '' ? array_map('intval', explode(',', $roleUsersRaw)) : [];

    $result = PH::createPortalSite($siteTitle, $siteCode, $roleName, $roleUsers);

    echo '<div style="margin:10px 0">';
    if (!empty($result["success"])) {
        echo "<pre style='color:green'>" . htmlspecialcharsbx($result["message"]) . "</pre>";
    } else {
        echo "<pre style='color:red'>" . htmlspecialcharsbx($result["message"]) . "</pre>";
    }
    echo '</div>';
}

// Данные для списка
$userGroups = array_map('intval', (array)$USER->GetUserGroupArray());
$sites = PH::getPortalSites($userGroups);

// Вывод
require __DIR__ . "/templates/form.php";
require __DIR__ . "/templates/list.php";

require($_SERVER["DOCUMENT_ROOT"] . "/bitrix/footer.php");






form
<?php
if (!defined("B_PROLOG_INCLUDED") || B_PROLOG_INCLUDED !== true) die();
global $USER;

use Bitrix\Main\UI\Extension;

if (!$USER->IsAdmin()) return;

// Загружаем Bitrix UI (кнопки/формы/селектор)
Extension::load(['ui.entity-selector', 'ui.buttons', 'ui.forms', 'main.core']);
?>

<div class="ui-block ui-block-section" style="padding:16px;">
    <div class="ui-block-title">
        <h3>Создать новый портал сайта</h3>
    </div>

    <form method="post" action="" class="ui-form">
        <?= bitrix_sessid_post() ?>
        <input type="hidden" name="create_site" value="Y" />

        <div class="ui-form-row">
            <div class="ui-form-label">Название сайта</div>
            <div class="ui-form-content">
                <input type="text" name="site_title" required class="ui-ctl ui-ctl-textbox" style="width:100%;">
            </div>
        </div>

        <div class="ui-form-row">
            <div class="ui-form-label">Код сайта (папка, латиница)</div>
            <div class="ui-form-content">
                <input type="text" name="site_code" class="ui-ctl ui-ctl-textbox" placeholder="Оставьте пустым — создастся автоматически">
            </div>
        </div>

        <div class="ui-form-row">
            <div class="ui-form-label">Название роли</div>
            <div class="ui-form-content">
                <input type="text" name="role_name" class="ui-ctl ui-ctl-textbox" placeholder="Например: Роль отдела продаж">
            </div>
        </div>

        <div class="ui-form-row">
            <div class="ui-form-label">Пользователи роли</div>
            <div class="ui-form-content">
                <input type="hidden" name="role_users" id="role_users_input">
                <div id="user-selector" style="margin-bottom:10px;"></div>
                <button type="button" id="open-selector-btn" class="ui-btn ui-btn-light-border ui-btn-sm">
                    Выбрать пользователей
                </button>
            </div>
        </div>

        <div class="ui-form-row">
            <button type="submit" class="ui-btn ui-btn-success">Создать сайт</button>
        </div>
    </form>
</div>

<script>
BX.ready(function () {
    var openBtn = document.getElementById('open-selector-btn');
    var container = document.getElementById('user-selector');
    var hiddenInput = document.getElementById('role_users_input');

    if (!openBtn) return;

    var dialog = new BX.UI.EntitySelector.Dialog({
        id: 'portal-hub-user-selector',
        targetNode: openBtn,
        context: 'PORTAL_HUB_USER_SELECT',
        entities: [{ id: 'user' }],
        multiple: true,
        enableSearch: true,
        width: 500,
        dropdownMode: false,
        events: {
            'Item:onSelect': updateView,
            'Item:onDeselect': updateView
        }
    });

    function updateView() {
        var items = dialog.getSelectedItems();
        // Обновляем скрытое поле
        hiddenInput.value = items.map(function (i) { return i.id; }).join(',');

        // Отрисовываем красивые лейблы
        container.innerHTML = '';
        items.forEach(function (i) {
            var el = document.createElement('div');
            el.className = 'ui-label ui-label-light ui-label-fill-light';
            el.style.margin = '4px';
            el.innerHTML = '<span class="ui-label-inner">' + BX.util.htmlspecialchars(i.getTitle()) + '</span>';
            container.appendChild(el);
        });
    }

    openBtn.addEventListener('click', function () {
        if (typeof BX === 'undefined' || !BX.UI || !BX.UI.EntitySelector) {
            alert('UI Entity Selector не загружен. Убедитесь, что страница подключает header.php.');
            return;
        }
        dialog.show();
    });
});
</script>





