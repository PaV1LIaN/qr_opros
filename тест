    /**
     * Вернёт активные сайты, созданные SiteForge (DIR начинается с /local/siteforge/).
     * Каждый элемент: ['LID','NAME','DIR']
     */
    public function listSites(): array
    {
        $out = [];
        $res = \CSite::GetList($by='NAME', $order='asc', [
            'ACTIVE' => 'Y',
        ]);
        while ($s = $res->Fetch()) {
            // фильтруем только наши
            if (!empty($s['DIR']) && str_starts_with($s['DIR'], $this->rootRel . '/')) {
                $out[] = [
                    'LID'  => $s['LID'],
                    'NAME' => $s['NAME'],
                    'DIR'  => $s['DIR'],
                ];
            }
        }
        return $out;
    }

    /**
     * По коду сайта (LID) возвращает IDs групп Admins/Users.
     * Возвращает: ['ADMIN_GROUP_ID'=>int|null, 'USER_GROUP_ID'=>int|null]
     */
    public function resolveSiteGroupIdsByLid(string $lid): array
    {
        $adminName = "[{$lid}] Site Admins";
        $userName  = "[{$lid}] Site Users";

        $adminId = $this->findGroupIdByNameOrStringId($adminName);
        $userId  = $this->findGroupIdByNameOrStringId($userName);

        return [
            'ADMIN_GROUP_ID' => $adminId,
            'USER_GROUP_ID'  => $userId,
        ];
    }

    /**
     * Проверяет, состоит ли пользователь хотя бы в одной группе сайта.
     * true => можно заходить (и файловые права пропустят).
     */
    public function userHasAccessToSite(string $lid, int $userId): bool
    {
        if ($userId <= 0) { return false; }
        $ids = $this->resolveSiteGroupIdsByLid($lid);
        $userGroups = \CUser::GetUserGroup($userId);
        if (!is_array($userGroups)) { $userGroups = []; }
        $userGroups = array_map('intval', $userGroups);

        foreach (['ADMIN_GROUP_ID','USER_GROUP_ID'] as $k) {
            if (!empty($ids[$k]) && in_array((int)$ids[$k], $userGroups, true)) {
                return true;
            }
        }
        return false;
    }

    /** ===== internal helpers ===== */

    protected function findGroupIdByNameOrStringId(string $name): ?int
    {
        $stringId = $this->slugifyStringId($name);

        // 1) Ищем по STRING_ID
        $g = \CGroup::GetList($by='c_sort', $order='asc', ['STRING_ID' => $stringId])->Fetch();
        if ($g && (int)$g['ID'] > 0) {
            return (int)$g['ID'];
        }

        // 2) Ищем по NAME (на случай, если STRING_ID в базе иной)
        $g = \CGroup::GetList($by='c_sort', $order='asc', ['NAME' => $name])->Fetch();
        if ($g && (int)$g['ID'] > 0) {
            return (int)$g['ID'];
        }

        return null;
    }
